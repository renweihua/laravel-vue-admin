<?php

namespace App\Modules\Admin\Services;

use App\Exceptions\Exception;
use App\Modules\Admin\Entities\Rabc\AdminMenu;
use App\Modules\Admin\Entities\Rabc\AdminRole;
use Illuminate\Support\Facades\DB;

class AdminRoleService extends BaseService
{
    public function __construct(AdminRole $adminRole)
    {
        $this->model = $adminRole;
    }

    public function getSelectLists($request)
    {
        return $this->model->where(function($query) use ($request){
            $search = $request->input('search', '');
            // 可以按照名称进行搜索
            if (!empty($search)){
                $query->where('role_name', 'LIKE', '%' . trim($search) . '%');
            }
        })->with(['menus'])->orderBy($this->model->getKeyName(), 'ASC')->limit(100)->get();
    }

    public function create(array $params)
    {
        DB::beginTransaction();
        try{
            $detail = parent::create($params); // TODO: Change the autogenerated stub

            $this->setMenuForRole($detail, $params);

            DB::commit();
            return true;
        }catch (Exception $e){
            DB::rollBack();
            $this->setError($e->getMessage());
            return false;
        }
    }

    public function update(array $params)
    {
        DB::beginTransaction();
        try{
            parent::update($params); // TODO: Change the autogenerated stub

            $this->setMenuForRole($this->detail, $params);

            DB::commit();
            return true;
        }catch (Exception $e){
            DB::rollBack();
            $this->setError($e->getMessage());
            return false;
        }
    }

    protected function setMenuForRole($detail, $params)
    {
        // 超级管理员角色不可编辑
        if (isset($params['menu_ids']) && $detail->{$this->model->getKeyName()} != 1){
            $menu_rules = $params['menu_ids'];

            $all_menus = AdminMenu::select('menu_id')->find($menu_rules)->toArray();//当前选中的菜单权限
            $new_all_menus = array_column($all_menus, 'menu_id', 'menu_id');
            $has_menus = $detail->menus->toArray();//当前已有的菜单权限
            $new_has_menus = array_column($has_menus, 'menu_id', 'menu_id');

            $primary_key = $this->model->getKeyName();
            /**
             * 添加的权限
             */
            $add_menus = get_array_diff($new_all_menus, $new_has_menus);
            if (!empty($add_menus)) {
                foreach ($add_menus as $menus) $this->model->grantMenus([
                    $primary_key => $detail->{$primary_key},
                    'menu_id' => $menus,
                ]);
            }

            /**
             * 要删除的权限
             */
            $delete_menus = get_array_diff($new_has_menus, $new_all_menus);
            if (!empty($delete_menus)) {
                foreach ($delete_menus as $menus) $this->model->deleteMenus([
                    $primary_key => $detail->{$primary_key},
                    'menu_id' => $menus,
                ]);
            }
        }
    }
}
